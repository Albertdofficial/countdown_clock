{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","setInterval","yearNow","Date","getFullYear","futureDate","dateNow","console","log","Math","floor","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMA+CeA,MA3Cf,WACE,MAAsBC,mBAAS,GAA/B,mBAAKC,EAAL,KAAWC,EAAX,KACA,EAAwBF,mBAAS,GAAjC,mBAAKG,EAAL,KAAYC,EAAZ,KACA,EAA4BJ,mBAAS,GAArC,mBAAKK,EAAL,KAAcC,EAAd,KACA,EAA4BN,mBAAS,GAArC,mBAAKO,EAAL,KAAcC,EAAd,KAuBA,OArBAC,aAAY,WACV,IAAMC,GAAU,IAAIC,MAAOC,cACrBC,EAAa,IAAIF,KAAKD,EAAS,EAAG,IAClCI,EAAU,IAAIH,KAEpBI,QAAQC,IAAIH,GAEZN,EAAUU,KAAKC,OAAOL,EAAaC,GAAW,KAC9CT,EAAUY,KAAKC,MAAMX,EAAU,IAC/BJ,EAAQc,KAAKC,MAAMb,EAAU,IAC7BJ,EAAOgB,KAAKC,MAAMf,EAAQ,IAG1BI,EAAUA,EAAiB,GAAPN,EAAY,KAAe,MAF/CE,GAAuB,GAAPF,GAEgD,IADhEI,EAAUA,EAAiB,GAAPJ,EAAY,GAAa,GAARE,GAGrCD,EAAQD,GACRG,EAASD,GACTG,EAAWD,GACXG,EAAWD,KACV,KAGD,sBAAKY,UAAU,MAAf,UACE,iCACE,+BACGlB,EADH,WACiBE,EADjB,YACiCE,EADjC,cACqDE,EADrD,WAEE,gFAIJ,iCACE,mBAAGY,UAAU,YAAb,qDC7BOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.fb80ccbc.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n// import Background from '../images/background_image.jpg';\n\nfunction App() {\n  let [days, setDays] = useState(0);\n  let [hours, setHours] = useState(0);\n  let [minutes, setMinutes] = useState(0);\n  let [seconds, setSeconds] = useState(0);\n\n  setInterval(function () {\n    const yearNow = new Date().getFullYear();\n    const futureDate = new Date(yearNow, 3, 11); //months starts counting from zero\n    const dateNow = new Date();\n\n    console.log(futureDate);\n\n    seconds = Math.floor((futureDate - dateNow) / 1000);\n    minutes = Math.floor(seconds / 60);\n    hours = Math.floor(minutes / 60);\n    days = Math.floor(hours / 24);\n    hours = hours - days * 24; // hours remained\n    minutes = minutes - days * 24 * 60 - hours * 60;\n    seconds = seconds - days * 24 * 3600 - hours * 3600 - minutes * 60;\n\n    setDays(days);\n    setHours(hours);\n    setMinutes(minutes);\n    setSeconds(seconds);\n  }, 1000);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>\n          {days} days : {hours} hours : {minutes} minutes : {seconds} seconds\n          <p>Before Midterm Exams, Spring Semester 2022</p>\n        </h1>\n      </header>\n\n      <footer>\n        <p className=\"developer\">Developed by Albert David Bangura</p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}